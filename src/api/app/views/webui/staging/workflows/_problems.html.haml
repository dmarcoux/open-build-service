:ruby
  max_shown = 5
  project_class = staging_project.name.tr(':.', '_')
  item_project_class = 'hidden-item-' + project_class
  build_problems = merge_broken_packages(staging_project.broken_packages)
  picked_checks, picked_build_problems, remains_checks, remains_build_problems =
    pick_max_problems(staging_project.checks.failed, build_problems, max_shown)

- if picked_checks.empty? && picked_build_problems.empty?
  .text-center
    %i.fas.fa-check-circle.text-success
- else
  %ul.list-group.list-group-flush
    - picked_checks.each do |check|
      = render partial: 'status_problems', locals: { check: check }
    - picked_build_problems.each do |name, states|
      = render partial: 'build_problems', locals: { name: name, states: states, staging_project: staging_project }
    - remain_count = remains_checks.length + remains_build_problems.length
    - if remain_count > 0
      %span.collapse{ 'id': item_project_class }
        - remains_checks.each do |check|
          = render partial: 'status_problems', locals: { check: check }
        - remains_build_problems.each do |name, states|
          = render partial: 'build_problems', locals: { name: name, states: states, staging_project: staging_project }
      %li.list-group-item.table-list-group-item
        %a{ 'data-toggle': 'collapse', href: "##{item_project_class}", 'aria-expanded': 'false' }
          %span.expander See #{remain_count} more
          %span.collapser See #{remain_count} less
